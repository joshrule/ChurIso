# Add an example of an arbitrary graph
# This requires encoding the lines since if we don't,
# we can run into contradictions (assuming uniqueness)
# like if alewife=(north park) and government=(north park)

[unique braintree downtown park alewife riverside government northstation bowdoin state wonderland downtown foresthill oakgrove]
#[unique red-north green-north blue-north orange-north] # what it means to move north on each line

#[limit braintree 8]
#[limit downtown 8]
#[limit park 8]
#[limit alewife 8] 
#[limit riverside 8] 
#[limit government 8] 
#[limit northstation 8]
#[limit bowdoin 8]
#[limit state 8]
#[limit wonderland 8]
#[limit downtown 8]
#[limit foresthill 8]
#[limit oakgrove 8]

# Ordering these 4 first seems to help a lot
[constrain state    = (e orange-north downtown)]
[constrain park     = (e red-north downtown)]
[constrain government   = (e green-north park)]
[constrain state        = (e blue-north government)]

[constrain downtown = (e red-north braintree)]
[constrain alewife  = (e red-north park)]


## Seems hard to fit these given the above
[constrain northstation = (e green-north government)]

#[constrain northstation = (orange-north state)]
[constrain government = (e blue-north bowdoin)]

#[constrain wonderland = (e blue-north state)]
#[constrain park         = (green-north riverside)]

#[constrain downtown     = (orange-north foresthill)]
#[constrain oakgrove     = (orange-north northstation)]


